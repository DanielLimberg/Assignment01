2+2
install.packages('ggplot2')
library(ggplot2)
ggplot(mtcars, aes(hp, mpg) + geom_point()
ggplot(mtcars, aes(hp, mpg)) + geom_point()
ggplot2(mtcars, aes(hp, mpg)) + geom_point()
ggplot(mtcars, aes(hp, mpg)) + geom_point()
3*3
number <- 10
number
words <- "Hello World"
words
11 -> other number
rm number
number <- number + 10
class(number)
ls(number)
ls(number)
summary(swiss)
cor(swiss$Agriculture, swiss$Education)
plot(swiss$Agriculture, swiss$Education)
data()
data(swiss)
plot(swiss$Agriculture, swiss$Education)
?swiss
names(swiss)
class(swiss$Education)
fun_mean <- function(x){
sum(x)/length(x)
}
fun_mean(x = swiss$Catholic)
summary(swiss$Catholic)
hist(fertility)
hist(swiss$Fertility)
hist(swiss$Agriculture)
hist(swiss$Examination)
boxplot(swiss$Education)
ggplot(swiss, aes(Agriculture, Education))
library(ggplot2)
ggplot(swiss, aes(Agriculture, Education))
ggplot(swiss, aes(Agriculture, Education)) + geom_point()
ggplot(swiss, aes(Agriculture, Education)) + geom_point() + geom_smooth()
ggplot(swiss, aes(Agriculture, Education)) + geom_point() + geom_smooth() + theme_bw()
ggplot(swiss, aes(Catholic, Education)) + geom_point() + geom_smooth() + theme_bw()
hist(swiss$Catholic)
plot(swiss$Fertility, swiss$Education)
plot(swiss$Education, swiss$Fertility)
class(swiss)
((swiss$Catholic > .5) = 1) %>% Catholic_majority
Catholic_majority <- ((swiss$Catholic > .5) = 1)
?dummy
?corr_plot
??corr_plot
install.packages('corrplot')
library(corrplot)
?corrplot
install.packages(rio)
summary(EuStockMarkets)
boxplot(EuStockMarkets)
library(corrplot; ggplot2)
library(corrplot)
data("EuStockMarkets")
view(EuStockMarkets)
view("EuStockMarkets")
View(EuStockMarkets)
help("EuStockMarkets")
?EuStockMarkets
View(presidents)
?presidents
View(nottem)
?nottem
getwd()
setwd('C:/Users/Johannes SK/Dropbox/Studium/Spring2016/CollaborativeResearch/Assignment01')
install.packages("weathermetrics")
install.packages("ggplot2")
library(weathermetrics)
library(ggplot2)
library(weathermetrics)
library(ggplot2)
?weathermetrics
?ggplot2
??ggplot2
# Integrating dataset into the environment
data("nottem")
nottem
?nottem
# Converting temperature from fahrenheit into degrees celsius
nottemTempC <- fahrenheit.to.celsius(nottem)
nottemTempC
plot(nottemTempC, , col="red", ylab="Monthly Average in °C", main="Temperature Chart for Nottingham")
ggplot(data=nottenTempC)
ggplot(nottenTempC)
plot(nottemTempC, , col="red", ylab="Monthly Average in °C", main="Temperature Chart for Nottingham")
ggplot2(nottenTempC)
ggplot2('nottenTempC')
ggplot('nottenTempC')
Nottem <- as.matrix(nottemTempC)
Nottem$month <- with(Nottem, factor(as.POSIXlt(Date)$mon, label=month.abb))
Nottem$year <- with(Nottem, 1900 + as.POSIXlt(Date)$year)
ggplot(data=Nottem)
Nottem$month
class(Nottem)
ls()
Nottem$month <- c((1:12)*20)
Nottem
View(Nottem)
remove(Nottem&month)
remove(Nottem$month)
nottemTempC <- fahrenheit.to.celsius(nottem)
Nottem <- as.matrix(nottemTempC)
plot(nottemTempC, , col="red", ylab="Monthly Average in °C", main="Temperature Chart for Nottingham")
nottemTempC$month <- c((1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12,1:12))
1:12
1:12*20
(1:12)*20
1:12, 1:12
1:12&1:12
1:12, 1:12
n <- 20
rep(1:12, each=n)
rep(1:12, 20)
nottemTempC$month <- c(rep(1:12, 20))
describe(nottenTempC)
path <- "http://www.sr.bham.ac.uk/~ajrs/R/datasets"
a <- load(url(paste(path,"middayweather.RData",sep="/")))
close(url(paste(path,"middayweather.RData",sep="/")))
require(ggplot2)
a
middayweather
middayweather$month <- with(middayweather, factor(as.POSIXlt(Date)$mon, label=month.abb))
middayweather
middayweather$year <- with(middayweather, 1900 + as.POSIXlt(Date)$year)
middayweather
middayweather <- subset(middayweather, year %in% 2007:2009)
middayweather
theme_set(theme_gray(base_size = 11))
p <- ggplot(data=middayweather, aes(month, T.out)) +
geom_boxplot() +
facet_wrap( ~ year, nrow=1) +
scale_x_discrete(breaks=month.abb[c(1, 4, 7, 10)]) +
xlab("") +
ylab(as.expression(expression( paste("Temperature (", degree,"C)") )))
theme_set(theme_gray(base_size = 11))
p <- ggplot(data=middayweather, aes(month, T.out)) +
geom_boxplot() +
facet_wrap( ~ year, nrow=1) +
scale_x_discrete(breaks=month.abb[c(1, 4, 7, 10)]) +
xlab("") +
ylab(as.expression(expression( paste("Temperature (", degree,"C)") )))
ggsave(p, file="temperature_monthly_boxplot.pdf", width=9, height=3.5)
#--Load previously saved data:
path <- "http://www.sr.bham.ac.uk/~ajrs/R/datasets"
a <- load(url(paste(path,"middayweather.RData",sep="/")))
close(url(paste(path,"middayweather.RData",sep="/")))
#--Load extra library:
## if not already installed, then run:
# install.packages("ggplot2")
require(ggplot2)
middayweather
#--Calculate month from date & create factor:
middayweather$month <- with(middayweather, factor(as.POSIXlt(Date)$mon, label=month.abb))
#--Calculate year from date:
middayweather$year <- with(middayweather, 1900 + as.POSIXlt(Date)$year)
#--Only use complete years:
middayweather <- subset(middayweather, year %in% 2007:2009)
#-----Plot data as boxplot summary for each month:
theme_set(theme_gray(base_size = 11))
p <- ggplot(data=middayweather, aes(month, T.out)) +
geom_boxplot() +
facet_wrap( ~ year, nrow=1) +
scale_x_discrete(breaks=month.abb[c(1, 4, 7, 10)]) +
xlab("") +
ylab(as.expression(expression( paste("Temperature (", degree,"C)") )))
#--Save plot to pdf:
ggsave(p, file="temperature_monthly_boxplot.pdf", width=9, height=3.5)
class(middayweather)
month <- c(rep(1:12, 20))
month
Nottem_df <- data.frame(nottemTempC, month)
Nottem_df
View(Nottem_df)
Nottem_df <- data.frame(nottemTempC)
View(Nottem_df)
Nottem <- as.matrix(nottemTempC)
View(Nottem)
Nottem_df <- data.frame(Nottem, month)
View(Nottem_df)
Nottem <- 0
View(nottemTempC)
nottemTempC <- fahrenheit.to.celsius(nottem)
nottemTempC
month <- c(1:12)
view(month)
View(month)

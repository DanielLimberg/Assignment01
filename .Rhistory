<<<<<<< HEAD
ggplot(USArrests) +
geom_bar(aes(y = murder, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = murder, x = State),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = murder, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = murder, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = murder, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
coord_flip()
?USArrests
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)" +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests per 100,000)" +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests per 100,000") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = murder, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests per 100,000") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests per 100,000") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_histogram(aes(x = murder),
colour = "black",
fill = "transparent",
binwidth = 2) +
theme_bw()
barplot(USArrests$murder, names.arg = states, las = 2, ylab = "Murder rate per 100,000 in different states",
main = "Murder rate in the United States in 1973")
hist(USArrests$urbanpop,
main = 'Violent Assault by USA States (per 100,000) in 1973',
xlab = 'numeric	 Assault arrests (per 100,000')
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 5) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 10) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 4) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 3) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 5) +
theme_bw()
?USArrests
ggplot(USArrests) +
geom_histogram(aes(x = % of the population living in urban areas),
colour = "black",
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
ylab("Rape arrests (per 100,000)")+
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
ylab("Rape arrests (per 100,000)")
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ggtitle("Rape rate in the United States in 1973") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Rape arrests (per 100,000)") +
ggtitle("Frequency of population in % living in urban areas") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
ggtitle("Frequency of population in % living in urban areas") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
ggtitle("Ppulation in % living in urban areas") +
theme_bw()
#-------------------------------------------------------------------------------------------------#
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
xlap("sdfd")
ylab("Frequency") +
ggtitle("Ppulation in % living in urban areas") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
xlab("sdfd")
ylab("Frequency") +
ggtitle("Ppulation in % living in urban areas") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
xlab("Population in % living in urban areas")
ylab("Frequency") +
ggtitle("Ppulation in % living in urban areas") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
xlab("Population in % living in urban areas")
ylab("Frequency") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
xlab("Population in % living in urban areas")
ylab("Frequency") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
ggtitle("Ppulation in % living in urban areas") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
xlab("Population in % living in urban areas") +
ggtitle("Ppulation in % living in urban areas") +
theme_bw()
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
xlab("Population in % living in urban areas") +
theme_bw()
data("USArrests") # to load the data
data("USArrests") # to load the data
data(USArrests) # to load the data
data(USArrests) # to load the data
View(USArrests) # to view data
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
xlab("Population in % living in urban areas") +
theme_bw()
################################
# --------Assignment01-------- #
# Example R Dataset: "USArrests"
# Md Mujahedul Islam
# 24 February 2016
# Hertie School of Governance
################################
#---------------------------------------------------------------------#
#Setting directory to ensure that it works for my collaborator as well#
#---------------------------------------------------------------------#
getwd()
try(setwd("C:/Users/User/Documents/GitHub/Assignment01"), silent = TRUE)
getwd()
#-------------------------------------------------------------#
#Clearing all and loading packages I need for the Assignment01#
#-------------------------------------------------------------#
rm(list = ls()) #just to clear all
load <- c("dplyr", "magrittr", "readstata13", "ggplot2", "reshape", "plyr") #shortcut to load packages I need
loaded <- lapply(load, require, character.only = T)
rm(load, loaded)
#-----------------------------------------------------------#
#Scanning the dataset to getting an idea of the overall data#
#-----------------------------------------------------------#
data(USArrests) # to load the data
View(USArrests) # to view data
names(USArrests) # to see names of variables
dim(USArrests) # to see how big the data frame, for instance, it has 50 rows, 4 variables
arrange(USArrests, murder) # to arrage data to see at a glance which state has highest murder rate
help(USArrests) # to see the codebook of this dataset
attributes(USArrests) # to see variable names, the class of the object, and the row names
attributes(USArrests)$row.names # to see the row names
#------------------------------------------#
#Renaming all the variables for consistency#
#------------------------------------------#
USArrests<-rename(USArrests,c(Assault="assault", Murder="murder", UrbanPop="urbanpop", Rape="rape"))
USArrests$states <- row.names(USArrests) #creating "states" variable
USArrests <- USArrests[,c(5,1:4)] #ordering 'states' variable in the first and other as it is.
#------------------------------------------------------#
#loop function for finding "mean" for all the variables#
#------------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
mean() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#--------------------------------------------------------#
#loop function for finding "median" for all the variables#
#--------------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
median() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#----------------------------------------------------#
#loop function for finding "range" for all the variables#
#----------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
range() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#--------------------------------------------------------------------------------------#
#Checking "mean" one by one for all the variables to see whether looping command worked#
#--------------------------------------------------------------------------------------#
mean(USArrests$murder, na.rm = TRUE)
mean(USArrests$assault, na.rm = TRUE)
mean(USArrests$urbanpop, na.rm = TRUE)
mean(USArrests$rape, na.rm = TRUE)
#----------------------------------------------------------------------------------------#
#Checking "median" one by one for all the variables to see whether looping command worked#
#----------------------------------------------------------------------------------------#
median(USArrests$murder, na.rm = TRUE)
median(USArrests$assault, na.rm = TRUE)
median(USArrests$urbanpop, na.rm = TRUE)
median(USArrests$rape, na.rm = TRUE)
#---------------------------------------------------------------------------------------#
#Checking "range" one by one for all the variables to see whether looping command worked#
#---------------------------------------------------------------------------------------#
range(USArrests$murder)
range(USArrests$assault)
range(USArrests$urbanpop)
range(USArrests$rape)
#----------------------------#
#Summary of all the variables#
#----------------------------#
summary(USArrests$murder, assault, urbanpop, rape)
summary(USArrests)
#----------------------------------------------------------#
#Barplot using ggplot to show murder rate in the US in 1973#
#----------------------------------------------------------#
ggplot(USArrests) +
geom_bar(aes(y = murder, x = states),
stat = "identity") +
ylab("Murder Rate per 100,000") +
ggtitle("Murder Rate in the United States in 1973") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
#-------------------------------------------------------------------#
#Colomn chart using ggplot to show rate in the United States in 1973#
#-------------------------------------------------------------------#
ggplot(USArrests) +
geom_bar(aes(y = rape, x = states),
stat = "identity") +
ylab("Rape arrests (per 100,000)") +
ggtitle("Rape rate in the United States in 1973") +
theme_bw() +
coord_flip()
#------------------------------------------------------------------------------------------------------------#
#Histograp using ggplot to demonstrate the frequency of the % of the population living in urban areas in 1973#
#-------------------------------------------------------------------------------------------------#
ggplot(USArrests) +
geom_histogram(aes(x = urbanpop),
colour = "black",
fill = "transparent",
binwidth = 2) +
ylab("Frequency") +
xlab("Population in % living in urban areas") +
theme_bw()
=======
2+2
install.packages('ggplot2')
library(ggplot2)
ggplot(mtcars, aes(hp, mpg) + geom_point()
ggplot(mtcars, aes(hp, mpg)) + geom_point()
ggplot2(mtcars, aes(hp, mpg)) + geom_point()
ggplot(mtcars, aes(hp, mpg)) + geom_point()
3*3
number <- 10
number
words <- "Hello World"
words
11 -> other number
rm number
number <- number + 10
class(number)
ls(number)
ls(number)
summary(swiss)
cor(swiss$Agriculture, swiss$Education)
plot(swiss$Agriculture, swiss$Education)
data()
data(swiss)
plot(swiss$Agriculture, swiss$Education)
?swiss
names(swiss)
class(swiss$Education)
fun_mean <- function(x){
sum(x)/length(x)
}
fun_mean(x = swiss$Catholic)
summary(swiss$Catholic)
hist(fertility)
hist(swiss$Fertility)
hist(swiss$Agriculture)
hist(swiss$Examination)
boxplot(swiss$Education)
ggplot(swiss, aes(Agriculture, Education))
library(ggplot2)
ggplot(swiss, aes(Agriculture, Education))
ggplot(swiss, aes(Agriculture, Education)) + geom_point()
ggplot(swiss, aes(Agriculture, Education)) + geom_point() + geom_smooth()
ggplot(swiss, aes(Agriculture, Education)) + geom_point() + geom_smooth() + theme_bw()
ggplot(swiss, aes(Catholic, Education)) + geom_point() + geom_smooth() + theme_bw()
hist(swiss$Catholic)
plot(swiss$Fertility, swiss$Education)
plot(swiss$Education, swiss$Fertility)
class(swiss)
((swiss$Catholic > .5) = 1) %>% Catholic_majority
Catholic_majority <- ((swiss$Catholic > .5) = 1)
?dummy
?corr_plot
??corr_plot
install.packages('corrplot')
library(corrplot)
?corrplot
install.packages(rio)
summary(EuStockMarkets)
boxplot(EuStockMarkets)
library(corrplot; ggplot2)
library(corrplot)
data("EuStockMarkets")
view(EuStockMarkets)
view("EuStockMarkets")
View(EuStockMarkets)
help("EuStockMarkets")
?EuStockMarkets
View(presidents)
?presidents
View(nottem)
?nottem
the working directory
# Set your own directory when running the file!
getwd()
setwd('C:/Users/Johannes SK/Dropbox/Studium/Spring2016/CollaborativeResearch/Assignment01')
# Install packages
## if not already installed, then run:
install.packages("weathermetrics")
install.packages("ggplot2")
library(weathermetrics)
library(ggplot2)
?weathermetrics
# Integrating dataset into the environment
data("nottem")
nottem
?nottem
# Converting temperature from fahrenheit into degrees celsius
nottemTempC <- fahrenheit.to.celsius(nottem)
nottemTempC
# Plotting the time series
plot(nottemTempC, , col="red", ylab="Monthly Average in °C", main="Temperature Chart for Nottingham")
JanuaryTemp <- c(nottemTempC[1])
JanuaryTemp
JanuaryTemp <- c(nottemTempC[1][13])
JanuaryTemp
JanuaryTemp <- c(nottemTempC[c(1, 13, 25, 37, 49, 61, 73, 85, 97])
JanuaryTemp <- c(nottemTempC[c(1, 13, 25, 37, 49, 61, 73, 85, 97)]
JanuaryTemp
JanuaryTemp <- c(nottemTempC[c(1, 13, 25, 37, 49, 61, 73, 85, 97)])
JanuaryTemp
JanuaryTemp <- c(nottemTempC[c(1+12*n)])
n <- c(1:19)
JanuaryTemp <- c(nottemTempC[c(1+12*n)])
JanuaryTemp
n <- c(0:19)
JanuaryTemp <- c(nottemTempC[c(1+12*n)])
JanuaryTemp
n <- c(0:19)
JanuaryT <- c(nottemTempC[c(1+12*n)])
FebruaryT <- c(nottemTempC[c(2+12*n)])
MarchT <- c(nottemTempC[c(3+12*n)])
AprilT <- c(nottemTempC[c(4+12*n)])
MayT <- c(nottemTempC[c(5+12*n)])
JuneT <- c(nottemTempC[c(6+12*n)])
JulyT <- c(nottemTempC[c(7+12*n)])
AugustT <- c(nottemTempC[c(8+12*n)])
SeptemberT <- c(nottemTempC[c(9+12*n)])
OctoberT <- c(nottemTempC[c(10+12*n)])
NovemberT <- c(nottemTempC[c(11+12*n)])
DecemberT <- c(nottemTempC[c(12+12*n)])
Nottem <- data.frame(JanuaryT, FebruaryT, MarchT, AprilT, MayT,
JuneT, JulyT, AugustT, SeptemberT, OctoberT,
NovemberT, DecemberT)
Nottem
View(Nottem)
ggplot2(Nottem)
ggplot(Nottem)
ggplot(Nottem)
ggplot(Nottem, aes(JanuaryT, FebruaryT, MarchT, AprilT, MayT,
JuneT, JulyT, AugustT, SeptemberT, OctoberT,
NovemberT, DecemberT))
ggplot(Nottem, aes(JanuaryT, FebruaryT)
ggplot(Nottem, aes(JanuaryT, FebruaryT))
ggplot(data=Nottem, aes(JanuaryT, FebruaryT))
ggplot(data=Nottem, aes(JanuaryT, T.out))
boxplot(Nottem$JanuaryT)
boxplot(Nottem$JanuaryT, Nottem$FebruaryT)
theme_set(theme_gray(base_size = 11))
boxplot(Nottem$JanuaryT, Nottem$FebruaryT)
boxplot(data.frame)
monthlist <- c(JanuaryT, FebruaryT, MarchT, AprilT, MayT,
JuneT, JulyT, AugustT, SeptemberT, OctoberT,
NovemberT, DecemberT)
View(monthlist)
Nottem <- data.frame(monthlist)
View(Nottem)
monthlist <- c('JanuaryT', 'FebruaryT', 'MarchT', 'AprilT', 'MayT',
'JuneT', 'JulyT', 'AugustT', 'SeptemberT', 'OctoberT',
'NovemberT', 'DecemberT')
monthlist
Nottem <- data.frame(monthlist)
View(Nottem)
Nottem <- data.frame(JanuaryT, FebruaryT, MarchT, AprilT, MayT,
JuneT, JulyT, AugustT, SeptemberT, OctoberT,
NovemberT, DecemberT)
View(Nottem)
boxplot(data.frame$JanuaryT, data.frame$FebruaryT, data.frame$MarchT,
data.frame$AprilT, data.frame$MayT, data.frame$JuneT,
data.frame$JulyT, data.frame$AugustT, data.frame$SeptemberT,
data.frame$OctoberT, data.frame$NovemberT, data.frame$DecemberT)
boxplot(Nottem$JanuaryT, Nottem$FebruaryT, Nottem$MarchT,
Nottem$AprilT, Nottem$MayT, Nottem$JuneT,
Nottem$JulyT, Nottem$AugustT, Nottem$SeptemberT,
Nottem$OctoberT, Nottem$NovemberT, Nottem$DecemberT)
boxplot(Nottem$JanuaryT, Nottem$FebruaryT, Nottem$MarchT,
Nottem$AprilT, Nottem$MayT, Nottem$JuneT,
Nottem$JulyT, Nottem$AugustT, Nottem$SeptemberT,
Nottem$OctoberT, Nottem$NovemberT, Nottem$DecemberT) +
main('Monthly Averages from 1920 to 1940')
boxplot(Nottem$JanuaryT, Nottem$FebruaryT, Nottem$MarchT,
Nottem$AprilT, Nottem$MayT, Nottem$JuneT,
Nottem$JulyT, Nottem$AugustT, Nottem$SeptemberT,
Nottem$OctoberT, Nottem$NovemberT, Nottem$DecemberT) +
title('Monthly Averages from 1920 to 1940')
xlab('Temperature in °C')
boxplot(Nottem$JanuaryT, Nottem$FebruaryT, Nottem$MarchT,
Nottem$AprilT, Nottem$MayT, Nottem$JuneT,
Nottem$JulyT, Nottem$AugustT, Nottem$SeptemberT,
Nottem$OctoberT, Nottem$NovemberT, Nottem$DecemberT) +
title('Monthly Averages from 1920 to 1940') +
xlab('Temperature in °C')
boxplot(Nottem$JanuaryT, Nottem$FebruaryT, Nottem$MarchT,
Nottem$AprilT, Nottem$MayT, Nottem$JuneT,
Nottem$JulyT, Nottem$AugustT, Nottem$SeptemberT,
Nottem$OctoberT, Nottem$NovemberT, Nottem$DecemberT) +
title('Monthly Averages from 1920 to 1940') +
ylab('Temperature in °C')
boxplot(Nottem$JanuaryT, Nottem$FebruaryT, Nottem$MarchT,
Nottem$AprilT, Nottem$MayT, Nottem$JuneT,
Nottem$JulyT, Nottem$AugustT, Nottem$SeptemberT,
Nottem$OctoberT, Nottem$NovemberT, Nottem$DecemberT)
boxplot(Nottem$JanuaryT, Nottem$FebruaryT, Nottem$MarchT,
Nottem$AprilT, Nottem$MayT, Nottem$JuneT,
Nottem$JulyT, Nottem$AugustT, Nottem$SeptemberT,
Nottem$OctoberT, Nottem$NovemberT, Nottem$DecemberT,
main = 'Monthly Averages from 1920 to 1940',
ylab = 'Temperature in °C')
>>>>>>> ad547cd0e06e61e5cec32fa9dbd7f0e1a3b15581

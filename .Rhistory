load <- c("dplyr", "magrittr", "readstata13", "ggplot2")
loaded <- lapply(load, require, character.only = T)
rm(load, loaded)
folder.path <- "C:/Users/User/Desktop/data/"
rm(list = ls())
load <- c("dplyr", "magrittr", "readstata13", "ggplot2")
loaded <- lapply(load, require, character.only = T)
rm(load, loaded)
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 700, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
xlab("Unstandardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 700, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Unstandardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
rm(mujahed)
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 700, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Unstandardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
rm(mujahed)
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Unstandardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
rm(mujahed)
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
rm(mujahed)
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
rm(mujahed)
mujahed <- read.csv(paste0(folder.path, "regression.csv"),
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
header = F)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
load <- c("dplyr", "magrittr", "readstata13", "ggplot2")
loaded <- lapply(load, require, character.only = T)
rm(load, loaded)
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
colnames(mujahed) <- c("var", "est", "se")
png(paste0(folder.path, "trial.png"),
width = 800, height = 1000,
res = 200, type = "cairo")
ggplot(mujahed, aes(est, var)) +
geom_errorbarh(aes(xmin = est - 1.96*se, xmax = est + 1.96*se),
height = 0.2, colour = "grey48") +
geom_point(size = 0.8) +
geom_vline(xintercept = 0, colour = "grey48",
linetype = "dotted") +
xlab("Standardized Coefficients Estimates") +
theme_bw() +
theme(axis.title.y = element_blank())
dev.off()
View(MortalityGDP)
labels=c("3gears","4gears","5gears"))
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
range(USArrests$murder, na.rm = TRUE)
range(USArrests$murder)
range(USArrests$assault)
getwd()
try(setwd("C:/Users/User/Documents/GitHub/Assignment01"), silent = TRUE)
getwd()
#-------------------------------------------------------------#
#Clearing all and loading packages I need for the Assignment01#
#-------------------------------------------------------------#
rm(list = ls()) #just to clear all
load <- c("dplyr", "magrittr", "readstata13", "ggplot2", "reshape", "plyr") #shortcut to load packages I need
loaded <- lapply(load, require, character.only = T)
rm(load, loaded)
#-----------------------------------------------------------------#
#Data using for the Assignment01 came from stored sample R dataset#
#-----------------------------------------------------------------#
data("USArrests")
View(USArrests)
help(USArrests)
#----------------------------------------------------#
#Renaming all the variables for consistency#
#----------------------------------------------------#
USArrests<-rename(USArrests,c(Assault="assault", Murder="murder", UrbanPop="urbanpop", Rape="rape"))
#----------------------------------------------------#
#loop function for finding mean for all the variables#
#----------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
mean() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#------------------------------------------------------#
#loop function for finding median for all the variables#
#------------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
median() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#----------------------------------------------------#
#loop function for finding range for all the variables#
#----------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
range() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#------------------------------------------------------------------------------------#
#Checking "mean" one by one for all the variables to see whether looping command worked#
#------------------------------------------------------------------------------------#
mean(USArrests$murder, na.rm = TRUE)
mean(USArrests$assault, na.rm = TRUE)
mean(USArrests$urbanpop, na.rm = TRUE)
mean(USArrests$rape, na.rm = TRUE)
#------------------------------------------------------------------------------------#
#Checking "median" one by one for all the variables to see whether looping command worked#
#------------------------------------------------------------------------------------#
median(USArrests$murder, na.rm = TRUE)
median(USArrests$assault, na.rm = TRUE)
median(USArrests$urbanpop, na.rm = TRUE)
median(USArrests$rape, na.rm = TRUE)
#------------------------------------------------------------------------------------#
#Checking "range" one by one for all the variables to see whether looping command worked#
#------------------------------------------------------------------------------------#
range(USArrests$murder)
range(USArrests$assault)
range(USArrests$urbanpop)
range(USArrests$rape)
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
summary() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
summary(USArrests$murder)
summary(USArrests$murder, assault)
summary(USArrests$murder, assault, urbanpop, rape)
install.packages("stargazer")
library(stargazer)
USArrests$Date %<>% as.Date()
sum.data <- USArrests[,c(1:4)]
colnames(sum.data) <- c("murder", "assault", "urbanpop",
"rape")
stargazer(sum.data, align = T,
header = F,
title = "Summary Statistics for News Variables",
nobs = F, median = T)
rm(sum.data)
---
title: "Untitled"
author: "Md Mujahedul Islam"
date: "24 February 2016"
output: pdf_document
---
``` {r intialisation, echo = F, message = F}
options(repos=c(CRAN="http://mirrors.softliste.de/cran/"))
rm(list = ls())
load <- c("stargazer", "magrittr", "dplyr", "readxl",
"ggplot2", "grid", "GGally", "gridExtra", "zoo",
"rugarch", "texreg", "dplyr", "magrittr")
loaded <- lapply(load, function(x) {
if(!require(x, character.only = T)) {
install.packages(x)
require(x, character.only = T)
}
})
rm(load, loaded)
```
library(dplyr)
library(dplyr)
USArrests$Date %<>% as.Date()
sum.data <- USArrests[,c(1:4)]
colnames(sum.data) <- c("murder", "assault", "urbanpop",
"rape")
stargazer(sum.data, align = T,
header = F,
title = "Summary Statistics for News Variables",
nobs = F, median = T)
rm(sum.data)
`````` {r sumdata, echo = F, results = "asis"}
`````` {r sumdata, echo = F}
`````` {r usarrests, echo = F}
USArrests$Date %<>% as.Date()
sum.data <- USArrests[,c(1:4)]
colnames(sum.data) <- c("murder", "assault", "urbanpop",
"rape")
stargazer(sum.data, align = T,
header = F,
title = "Summary Statistics for News Variables",
nobs = F, median = T)
rm(sum.data)
View(USArrests)
hist(USArrests$assault,
main = 'Violent Assault by USA States (per 100,000) in 1973',
xlab = 'numeric	 Assault arrests (per 100,000')
#################################
# R source to get second dataset
# Md Mujahedul Islam
# 24 February 2016
# Hertie School of Governance
#################################
#---------------------------------------------------------------------#
#Setting directory to ensure that it works for my collaborator as well#
#---------------------------------------------------------------------#
getwd()
try(setwd("C:/Users/User/Documents/GitHub/Assignment01"), silent = TRUE)
getwd()
#-------------------------------------------------------------#
#Clearing all and loading packages I need for the Assignment01#
#-------------------------------------------------------------#
rm(list = ls()) #just to clear all
load <- c("dplyr", "magrittr", "readstata13", "ggplot2", "reshape", "plyr") #shortcut to load packages I need
loaded <- lapply(load, require, character.only = T)
rm(load, loaded)
#-----------------------------------------------------------------#
#Data using for the Assignment01 came from stored sample R dataset#
#-----------------------------------------------------------------#
data("USArrests")
View(USArrests)
help(USArrests)
#----------------------------------------------------#
#Renaming all the variables for consistency#
#----------------------------------------------------#
USArrests<-rename(USArrests,c(Assault="assault", Murder="murder", UrbanPop="urbanpop", Rape="rape"))
#----------------------------------------------------#
#loop function for finding "mean" for all the variables#
#----------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
mean() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#------------------------------------------------------#
#loop function for finding "median" for all the variables#
#------------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
median() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#----------------------------------------------------#
#loop function for finding "range" for all the variables#
#----------------------------------------------------#
for (i in 1:length(names(USArrests))) {
USArrests[, i] %>%
range() %>%
round(digits = 3) %>%
paste(names(USArrests)[i], ., '\n') %>% # the . directs the
cat()
}
#--------------------------------------------------------------------------------------#
#Checking "mean" one by one for all the variables to see whether looping command worked#
#--------------------------------------------------------------------------------------#
mean(USArrests$murder, na.rm = TRUE)
mean(USArrests$assault, na.rm = TRUE)
mean(USArrests$urbanpop, na.rm = TRUE)
mean(USArrests$rape, na.rm = TRUE)
#----------------------------------------------------------------------------------------#
#Checking "median" one by one for all the variables to see whether looping command worked#
#----------------------------------------------------------------------------------------#
median(USArrests$murder, na.rm = TRUE)
median(USArrests$assault, na.rm = TRUE)
median(USArrests$urbanpop, na.rm = TRUE)
median(USArrests$rape, na.rm = TRUE)
#---------------------------------------------------------------------------------------#
#Checking "range" one by one for all the variables to see whether looping command worked#
#---------------------------------------------------------------------------------------#
range(USArrests$murder)
range(USArrests$assault)
range(USArrests$urbanpop)
range(USArrests$rape)
#----------------------------#
#Summary of all the variables#
#----------------------------#
summary(USArrests$murder, assault, urbanpop, rape)
hist(USArrests$assault,
main = 'Violent Assault by USA States (per 100,000) in 1973',
xlab = 'numeric	 Assault arrests (per 100,000')
View(USArrests)
